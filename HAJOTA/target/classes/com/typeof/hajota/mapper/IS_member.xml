<?xml version="1.0" encoding="UTF-8"?>

<!-- ===== #26. mapper 기본설정 ===== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<!-- ===== #27. 루트엘리먼트 & 네임스페이스 설정(프로젝트 전체 내에서 고유해야 한다.) ===== -->
<mapper namespace="IS_member">

 
	<resultMap type="java.util.HashMap" id="tbl_guest_resultmap">
		<result property="GUEST_EMAIL" 		column="guest_email" 	javaType="String" />
		<result property="PWD" 				column="pwd" 			javaType="String" />
		<result property="FIRST_NAME" 		column="first_name" 	javaType="String" />
		<result property="LAST_NAME" 		column="last_name" 		javaType="String" />
		<result property="BIRTHDAY" 		column="birthday" 		javaType="String" />
		<result property="STATUS" 			column="status" 		javaType="int" />
	</resultMap>

	<!-- 로그인 여부 알아오기 -->
	<select id="loginEnd" parameterType="java.util.HashMap" resultType="int"> 
     
      select case( select count(*)
                    from tbl_guest
                    where guest_email = #{guest_email} and
                          func_decrypted_pwd(#{guest_email}, #{pwd}) = substr(#{pwd}, 1, 8) and status = 1)
              when 1 then 1
              else( case(select count(*) 
                         from tbl_guest
                         where guest_email = #{guest_email} and status = 1)
                    when 1 then 0
                    else -1
                    end
                  )
              end as LOGINCHECK
     from dual
   </select>
 
	<!-- 로그인 성공한 사용자 정보 가져오기 -->
	<select id="getLoginMember" parameterType="java.util.HashMap" resultMap="tbl_guest_resultmap">
		select guest_email, pwd, first_name, last_name, birthday, status
		from tbl_guest
		where status = 1 and guest_email = #{guest_email}
	</select>

	<!-- 회원가입 -->
	<insert id="setMember" parameterType="java.util.HashMap">
		insert into tbl_guest(guest_email, pwd, first_name, last_name, birthday, status)
		values(#{guest_email}, func_encrypted_pwd(#{pwd}), #{first_name}, #{last_name}, #{birthday}, default)
	</insert>
 <!-- 
 	이름 가져오기
 	<select id="getName" parameterType="java.util.HashMap" resultMap="tbl_guest_resultmap">
 		select last_name || first_name
 		from tbl_guest
 		where status = 1 and guest_email = #{guest_email}
 	</select>
-->
 	<!-- 개인정보 수정 -->
 	<update id="editUser" parameterType="java.util.HashMap">
 		update tbl_guest set last_name=#{last_name}, first_name=#{first_name}, pwd=#{pwd}
 		where guest_email=#{guest_email}
 	</update>


 	<!-- 비밀번호 변경 -->
 	<update id="editUserEnd" parameterType="java.util.HashMap">
 		update tbl_guest set pwd=#{pwd}
 		where guest_email=#{guest_email}
 	</update> 	
 
 	<!-- 회원탈퇴 -->
 	<update id="signOutEnd" parameterType="java.util.HashMap">
 		update tbl_guest set status = 0
 		where guest_email=#{guest_email}
 	</update>
 
	<resultMap id="tbl_guest_withdraw_reason" type="java.util.HashMap" >
		<result property="SEQ_GUEST_WITHDRAW_REASON" 		column="seq_guest_withdraw_reason" 	javaType="int" />
		<result property="WITHDRAW_REASON" 					column="withdraw_reason" 			javaType="String" />
	</resultMap> 
 
 	<!-- tbl_guest_withdraw_reason 시퀀스/탈퇴사유 가져오기 -->
 	<select id="getSignOut" parameterType="java.util.HashMap" resultMap="tbl_guest_withdraw_reason">
 		select *
 		from tbl_guest_withdraw_reason
 	</select>
 	
 	
 	<insert id="reasonInsert" parameterType="java.util.HashMap">
 		insert into tbl_guest_withdraw(guest_email, seq_guest_withdraw_reason)
 		values (#{guest_email}, #{value})
 	</insert>
 	
<!-- 	
	Ajax로 검색어 입력시 자동글 완성하기
	<resultMap type="java.util.HashMap" id="getSearchWordMap">
		<result property="SEARCHDATA" column="searchdata" javaType="String" />
	</resultMap>
	<select id="searchWordCompleteList" parameterType="java.util.HashMap" resultMap="getSearchWordMap">
		<if test='colname.equals("")'>
			 
		</if>
	</select>
-->
 
</mapper>